name: Deploy after merge

on:
  push:
    branches:
      - develop
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps: 
      - name: Get code
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Build app
        run: |
          cd petclinicfe
          npm install
          npm run build
          docker build -t petclinicfe:latest .
          docker tag petclinicfe:latest ffijuljani1/petclinicfe:latest
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | \
          docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push ffijuljani1/petclinicfe:latest
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install java
        uses: actions/setup-java@v3
        with: 
          java-version: '17'
          distribution: 'temurin'
      - name: Cache maven dependencies
        uses: actions/cache@v4
        env: 
          cache_name: cache-maven-dependencies
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache_name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache_name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build backend
        run: |
          cd petclinicbe
          mkdir -p logs
          mvn clean install -DLOG_PATH=logs
          docker build -t petclinicbe:latest .
          docker tag petclinicbe:latest ffijuljani1/petclinicbe:latest
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | \
          docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push ffijuljani1/petclinicbe:latest

  deploy:
    runs-on: [self-hosted, atlantbh-petclinic-runner]
    needs: [build-frontend, build-backend]
    steps:
      - name: Remove old app.log if exists
        run: |
          sudo rm -rf logs || true
      - name: Get code
        uses: actions/checkout@v3
      - name: Start the application
        env:
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            GF_SMTP_USER: ${{ secrets.GF_SMTP_USER }}
            GF_SMTP_PASSWORD: ${{ secrets.GF_SMTP_PASSWORD }}
            GF_SMTP_FROM_ADDRESS: ${{ secrets.GF_SMTP_FROM_ADDRESS }}
        run: |
          docker compose pull
          docker compose up -d --force-recreate
        
        
    
