name: Deploy after merge

on:
  push:
    branches:
      - develop

permissions:
  contents: read           
  security-events: write   
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps: 
      - name: Get code
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Cache node dependencies
        uses: actions/cache@v4
        env: 
          cache_name: cache-node-dependencies
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache_name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache_name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build app
        run: |
          cd petclinicfe
          npm install
          npm run build
      - name: Build docker img
        run: |
          cd petclinicfe
          docker build -t petclinicfe:latest .
      - name: Cache Trivy vulnerability database
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy                   
          key: ${{ runner.os }}-trivy-db-v1
          restore-keys: |
            ${{ runner.os }}-trivy-db-
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with: 
          image-ref: petclinicfe:latest
          format: sarif
          output: trivy-fe.sarif
          severity: HIGH,CRITICAL
          exit-code: 1
      - name: Upload Trivy report for frontend app
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fe.sarif
      - name: Keep Sarif report as build artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fe-sarif
          path: trivy-fe.sarif
          retention-days: 7
      - name: Push image if scan passes
        run: |
          docker tag petclinicfe:latest registry.praksa.abhapp.com/petclinicfe:${GITHUB_SHA::7}
          echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | \
          docker login registry.praksa.abhapp.com -u "${{ secrets.DOCKER_REGISTRY_USERNAME }}" --password-stdin
          docker push registry.praksa.abhapp.com/petclinicfe:${GITHUB_SHA::7}
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install java
        uses: actions/setup-java@v3
        with: 
          java-version: '17'
          distribution: 'temurin'
      - name: Cache maven dependencies
        uses: actions/cache@v4
        env: 
          cache_name: cache-maven-dependencies
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache_name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache_name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build backend jar
        run: |
          cd petclinicbe
          mkdir -p logs
          mvn clean install -DLOG_PATH=logs
      - name: Build Docker img
        run: |
          cd petclinicbe
          docker build -t petclinicbe:latest .
      - name: Cache Trivy vulnerability database
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy                   
          key: ${{ runner.os }}-trivy-db-v1
          restore-keys: |
            ${{ runner.os }}-trivy-db-
      - name: Scan img with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: petclinicbe:latest
          format: sarif
          output: trivy-be.sarif
          severity: HIGH,CRITICAL
          exit-code: 1
      - name: Upload Trivy report for backend app
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-be.sarif
      - name: Keep Sarif report as build artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-be-sarif
          path: trivy-be.sarif
          retention-days: 7
      - name: Push image if scan passes
        run: |
          docker tag petclinicbe:latest registry.praksa.abhapp.com/petclinicbe:${GITHUB_SHA::7}
          echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | \
          docker login registry.praksa.abhapp.com -u "${{ secrets.DOCKER_REGISTRY_USERNAME }}" --password-stdin
          docker push registry.praksa.abhapp.com/petclinicbe:${GITHUB_SHA::7}

  deploy:
    runs-on: [self-hosted, atlantbh-petclinic-runner]
    needs: [build-frontend, build-backend]
    steps:
      - name: Remove old app.log if exists
        run: |
          sudo rm -rf logs || true
      - name: Get code
        uses: actions/checkout@v3
      - name: Start the application
        env:
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            GF_SMTP_USER: ${{ secrets.GF_SMTP_USER }}
            GF_SMTP_PASSWORD: ${{ secrets.GF_SMTP_PASSWORD }}
            GF_SMTP_FROM_ADDRESS: ${{ secrets.GF_SMTP_FROM_ADDRESS }}
        run: |
          export TAG=${GITHUB_SHA::7}
          docker compose pull
          docker compose up -d --force-recreate
        
        
    
